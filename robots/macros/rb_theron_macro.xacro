<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="rb_theron">



	<!-- Import differential base elements -->
	<xacro:include filename="$(find robot_description)/urdf/bases/rb_theron_base_v4.urdf.xacro" />

	<!-- Import wheels -->
	<xacro:include filename="$(find robot_description)/urdf/wheels/rubber_wheel/rubber_wheel_150.urdf.xacro" />
	<xacro:include filename="$(find robot_description)/urdf/wheels/omni_wheel/rb_theron_omni_wheel.urdf.xacro" />

	<!-- Import casters -->
	<xacro:include filename="$(find robot_description)/urdf/wheels/caster_wheel/rb_theron_caster.urdf.xacro" />


	<xacro:macro name="rb_theron" params="robot_id publish_bf hq kinematics">

		<!-- *************** -->
		<!-- Robots Elements -->
		<!-- *************** -->

		<!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->

		<!-- RB_THERON base -->
		<xacro:rb_theron_base_v4 robot_id="${robot_id}" publish_bf="true" hq="${hq}" />

		<!-- WHEELS -->
		<xacro:if value="${kinematics == 'skid' or kinematics == 'skid_4w'}">
			<xacro:rubber_wheel robot_id="${robot_id}_right" parent="${robot_id}_base_link" hq="${hq}">
				<origin xyz="${wheel_offset_x} ${-wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
			</xacro:rubber_wheel>
			<xacro:rubber_wheel robot_id="${robot_id}_left" parent="${robot_id}_base_link" hq="${hq}">
				<origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
			</xacro:rubber_wheel>
			<!-- Castor wheels-->
			<xacro:caster robot_id="${robot_id}_front_left" parent="${robot_id}_base_link" hq="${hq}" use_sim="$(arg use_sim)">
				<origin xyz="${castor_offset_x} ${castor_offset_y} ${castor_offset_z}" rpy="0 0 0"/>
			</xacro:caster>
			<xacro:caster robot_id="${robot_id}_front_right" parent="${robot_id}_base_link" hq="${hq}" use_sim="$(arg use_sim)">
				<origin xyz="${castor_offset_x} ${-castor_offset_y} ${castor_offset_z}" rpy="0 0 0"/>
			</xacro:caster>
			<xacro:caster robot_id="${robot_id}_rear_left" parent="${robot_id}_base_link" hq="${hq}" use_sim="$(arg use_sim)">
				<origin xyz="${-castor_offset_x} ${castor_offset_y} ${castor_offset_z}" rpy="0 0 0"/>
			</xacro:caster>
			<xacro:caster robot_id="${robot_id}_rear_right" parent="${robot_id}_base_link" hq="${hq}" use_sim="$(arg use_sim)">
				<origin xyz="${-castor_offset_x} ${-castor_offset_y} ${castor_offset_z}" rpy="0 0 0"/>
			</xacro:caster>
		</xacro:if>
		<xacro:if value="${kinematics == 'omni' or kinematics == 'omni_4w'}">
			<xacro:omni_wheel robot_id="$(arg robot_id)_front_right" parent="${robot_id}_base_link" reflect="false" hq="${hq}">
				<origin xyz="${omni_wheel_offset_x} -${omni_wheel_offset_y} ${omni_wheel_offset_z}" rpy="0 0 0"/>
			</xacro:omni_wheel>

			<xacro:omni_wheel robot_id="$(arg robot_id)_front_left" parent="${robot_id}_base_link" reflect="true" hq="${hq}">
				<origin xyz="${omni_wheel_offset_x} ${omni_wheel_offset_y} ${omni_wheel_offset_z}" rpy="0 0 0"/>
			</xacro:omni_wheel>

			<xacro:omni_wheel robot_id="$(arg robot_id)_back_left" parent="${robot_id}_base_link" reflect="true" hq="${hq}">
				<origin xyz="-${omni_wheel_offset_x} ${omni_wheel_offset_y} ${omni_wheel_offset_z}" rpy="0 0 0"/>
			</xacro:omni_wheel>

			<xacro:omni_wheel robot_id="$(arg robot_id)_back_right" parent="${robot_id}_base_link" reflect="false" hq="${hq}">
				<origin xyz="-${omni_wheel_offset_x} -${omni_wheel_offset_y} ${omni_wheel_offset_z}" rpy="0 0 0"/>
			</xacro:omni_wheel>
		</xacro:if>


		<!-- Gazebo ros control pluggins -->
		<!--xacro:ros_control namespace="$(arg namespace)"/-->
		<xacro:ros_control/>
		<xacro:if value="$(arg ros_planar_move_plugin)">
			<xacro:omni_steering robot_id="$(arg robot_id)_" publish_tf="true"/>
		</xacro:if>


	</xacro:macro>

</robot>
